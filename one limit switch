  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
      static int pwm_value = 0; // Current PWM duty cycle value
      const int pwm_increment = 100; // Increment/Decrement value for smooth change
      const int pwm_max = 300; // Maximum PWM value (100% duty cycle if ARR=1000)
      const int pwm_min = 0;    // Minimum PWM value (motor off)

      // Read the state of the limit switch
      GPIO_PinState limitSwitchState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9);

      if (limitSwitchState == GPIO_PIN_SET)
      {

          while (pwm_value < pwm_max)
          {
              pwm_value += pwm_increment;
              if (pwm_value > pwm_max) pwm_value = pwm_max;
              TIM1->CCR1 = pwm_value;
              HAL_Delay(50);
          }


          HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_SET);
      }
      else
      {

          while (pwm_value > pwm_min)
          {
              pwm_value -= pwm_increment;
              if (pwm_value < pwm_min) pwm_value = pwm_min;
              TIM1->CCR1 = pwm_value;
              HAL_Delay(50);
          }



      }

      /* Optional: Add a small delay for stability */
      HAL_Delay(50); // Adjust debounce delay as needed
  }
